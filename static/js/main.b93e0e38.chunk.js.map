{"version":3,"sources":["components/header/header.js","components/about/about.js","components/resume/resume.js","components/contactus/contactus.js","components/footer/footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","Fragment","id","className","href","title","Component","About","src","alt","contentStyle","maxWidth","width","height","Resume","class","reactjs_popup_es","trigger","modal","close","onClick","align","console","log","Contactus","action","method","name","htmlFor","type","defaultValue","size","cols","rows","Footer","App","header_Header","about_About","resume_Resume","contactus_Contactus","footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b93e0e38.chunk.js","sourcesContent":["import React, { Component } from 'react';\nexport default class Header extends Component {\n    render() {\n        return (\n            <React.Fragment>\n            {/* Header================================================== */}\n            <header id=\"home\">\n            <nav id=\"nav-wrap\">\n            <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n            <a className=\"mobile-btn\" href=\"#\" title=\"Hide navigation\">Hide navigation</a>\n            <ul id=\"nav\" className=\"nav\">\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">Home</a></li>\n            <li><a className=\"smoothscroll\" href=\"#about\">About</a></li>\n            <li><a className=\"smoothscroll\" href=\"#resume\">Experience</a></li>\n            <li><a className=\"smoothscroll\" href=\"#contact\">Contact</a></li>\n            </ul> {/* end #nav */}\n            </nav> {/* end #nav-wrap */}\n            <div className=\"row banner\">\n            <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\">My name is Ravishdeep Singh.</h1>\n            <h3><span>I am an undergraduate student at the University of California, Davis and an aspiring software engineer. Let us <a className=\"smoothscroll\" href=\"#about\">start scrolling</a> and learn more <a className=\"smoothscroll\" href=\"#about\">about me</a></span>.</h3>\n            <hr />\n            </div>\n            </div>\n            <p className=\"scrolldown\">\n            <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\" /></a>\n            </p>\n            </header> {/* Header End */}\n            </React.Fragment>\n        );\n    }\n}\n","import React, { Component } from 'react';\nexport default class About extends Component {\n    render() {\n        return (\n            <React.Fragment>\n            {/* About Section================================================== */}\n            <section id=\"about\">\n            <div className=\"row\">\n            <div className=\"three columns\">\n      <img className=\"profile-pic\" src=\"images/profilepic.png\" alt />\n    </div>\n    <div className=\"nine columns main-col\">\n      <h2>About Me</h2>\n      <p> I am a son of two inspiring immigrant parents and a brother to two extrdoinary sisters.\n      When my family emigrated to the United States, we did not have any money under our name yet my parents\n      were driven by the passion to provide a better future for their children. I constantly remind myself of\n      the sacrifiecs my family made and it motivates me to excel in whatever I do. Through my parents and sisters\n      instilled a hard work ethic and excellent time management skills in me.\n\n      </p>\n      <h2>Summary of Accomplishments</h2>\n      <p> I am currently at UC Davis studying Computer Science and Mathmatics.\n        Throughout my studies I have excelled in my Computer Science courses and have obtained a GPA of 3.685 which is higher than\n        average for a Computer Science student at UC Davis. One accomplishment I am proud of is that I am currently a Undergraduate\n        Research Assitant working on Optimization Software used by scientists at Sandia National Laboratories.  I also find the\n        time to build side projects at hackathons and be involved in multiple organizations on campus such as\n        Project Rishi, SacHacks, and the Davis Computer Science Club.\n      </p>\n      <div className=\"row\">\n        <div className=\"columns download\">\n          <p>\n            <a href=\"images/Singh_Resume.pdf\" className=\"button\"><i className=\"fa fa-download\" />Download Resume</a>\n          </p>\n        </div>\n      </div> {/* end row */}\n    </div> {/* end .main-col */}\n  </div>\n</section> {/* About Section End*/}\n</React.Fragment>\n        );\n    }\n}\n","import React, { Component } from 'react';\nimport Popup from \"reactjs-popup\";\n\nconst contentStyle = {\n  maxWidth: \"1000px\",\n  width: \"110%\",\n  height: \"90%\"\n};\n\n\nexport default class Resume extends Component {\n    render() {\n        return (\n            <React.Fragment>\n            <section id=\"resume\">\n\n            <div class=\"row education\">\n               <div class=\"three columns header-col\">\n                  <h1><span>Education</span></h1>\n               </div>\n               <div class=\"nine columns main-col\">\n                  <div class=\"row item\">\n                     <div class=\"twelve columns\">\n\n                        <h3>University of California, Davis</h3>\n                        <p class=\"info\">B.S. in Computer Science and Minors in Mathmatics <span>&bull;</span> <em class=\"date\">September 2016-June 2020</em></p>\n\n                        <p>\n                        GPA: 3.685,\n                        Extracurriculars: Project Rishi, Campus Rotaract Club, Davis Computer Science Club\n                        </p>\n                     </div>\n\n                  </div>\n\n               </div>\n            </div>\n\n            {/* Work\n-               ---------------------------------------------- */}\n            <div className=\"row work\">\n    <div className=\"three columns header-col\">\n      <h1><span>Work</span></h1>\n    </div>\n    <div className=\"nine columns main-col\">\n      <div className=\"row item\">\n        <div className=\"twelve columns\">\n          <h3>SacHacks</h3>\n          <p className=\"info\"> Finance Associate<span>•</span> <em className=\"date\">August 2018 - Present</em></p>\n          <p>\n            SacHacks is the first collegiate Hackathon in Sacramento which took place in November 2018.\n            As a finance associate I worked closely with vendors for potential sponsorships. I scouted potential spronsors for SacHacks to build\n            new relationships with such as Micron, Wikimedia, and Marvell. I also had to check in with my superiors on the progess I have made\n            with potential sponsors. With this past SachHacks being a sucess, I am planning have a bigger role for 2019. I am in the process of being\n            promoted to the head of Hacker Experience.\n          </p>\n        </div>\n      </div> {/* item end */}\n      <div className=\"row item\">\n        <div className=\"twelve columns\">\n          <h3>UC Davis Graduate School of Management</h3>\n          <p className=\"info\"> Undergraduate Research Assistant<span>•</span> <em className=\"date\">May 2018 - Present</em></p>\n          <p>\n            I am currently working as a research assistant under Professor David Woodruff. The Professor is mainly focused Prescient,\n            an Optimization Software developed in Python. I mostly work on the GOSM component of Prescient which uses Stochiastic programming\n            to create randomly generated scenarios of solar and wind power generation based on historical data of the generators. These scenarios\n            are used by the optimization side of Prescient to create a solution of what is the most efficient way to keep multiple generators on. The team working\n            on Presicent include me and two other individuals. There is also a team at Sandia National Laboratories who works on the main version of Prescient.\n          </p>\n        </div>\n      </div> {/* item end */}\n    </div> {/* main-col end */}\n            </div> {/* End Work */}\n            {/* Skills\n                ----------------------------------------------- */}\n            <div className=\"row skill\">\n    <div className=\"three columns header-col\">\n      <h1><span>Skills</span></h1>\n    </div>\n    <div className=\"nine columns main-col\">\n      <p>My technical skills are applicable to many fields such as software engineering, web development, and machine learning research.\n        Throughout my undergraduate studies I have had expereince with multiple programming languages such as Python, C/C++,\n         Go, JavaScript, Lisp, R, and Matlab. I am comfortable in Linux, Mac, and Windows environments and have experience in\n         working with Git, PostgreSQL, Docker, and Azure, Google Cloud Platform.\n      </p>\n      <div className=\"bars\">\n        <ul className=\"skills\">\n            <li><span className=\"bar-expand css\" /><em>Python</em></li>\n          <li><span className=\"bar-expand photoshop\" /><em>C/C++</em></li>\n          <li><span className=\"bar-expand illustrator\" /><em>Go</em></li>\n          <li><span className=\"bar-expand wordpress\" /><em>JavaScript</em></li>\n        </ul>\n      </div>{/* end skill-bars */}\n    </div> {/* main-col end */}\n            </div> {/* End skills */}\n\n            <div className=\"row\">\n    <div className=\"three columns header-col\">\n        <h1><span>Projects</span></h1>\n    </div>\n    <div className=\"twelve columns collapsed\">\n      {/* portfolio-wrapper */}\n      {/*<embed src= \"images/Informational_Interview_Report.pdf\" width= \"500\" height= \"375\"></embed>*/}\n\n      <div id=\"portfolio-wrapper\" className=\"bgrid-quarters s-bgrid-thirds cf\">\n\n      <div className=\"columns portfolio-item\">\n        <div className=\"item-wrap\">\n          <a href=\"#modal-01\" title>\n            <img alt src=\"images/interview.jpeg\" />\n            <div className=\"overlay\">\n              <div className=\"portfolio-item-meta\">\n              <Popup trigger={<button className=\"button\"> UWP 104T: Informational Interview Report </button>}\n                     modal\n                     contentStyle={contentStyle}\n                  >\n                {close => (\n                    <div className=\"modal\">\n                        <a className=\"close\" onClick={close}>&times;</a>\n                        <div className=\"header\"> <b>Informational Interview Report</b> </div>\n                            <div className=\"content\">\n                                <embed src= \"images/Informational_Interview_Report.pdf\" width= \"500\" height= \"500\" align=\"left\"></embed>\n                                An informational interview  is a meeting between an individual who wants to learn about a specific\n                                career and one who has first-hand knowledge about it. For my Technical Writing class, we were given an\n                                assignment of conducting an Informational Interview and write a report. For this assignment I conducted an\n                                interview with an associate who is a Software Developer at Amazon. The report summarizes the key findings\n                                from the interview, analyzes the qualities a potential employee needs for the position, and argues why\n                                I feel like I would be a good candidate for the position. The goal of this asisgnment was to understand the\n                                job responsibilities of potential career positions I am interested in.\n                            </div>\n                            <div className=\"actions\">\n                                <button className=\"button\" onClick={() => {\n                                        console.log(\"modal closed \");\n                                        close();\n                                }}> Close Page </button>\n                            </div>\n                        </div> )}\n              </Popup>\n              </div>\n            </div>\n          </a>\n        </div>\n      </div> {/* item end */}\n\n\n        <div className=\"columns portfolio-item\">\n          <div className=\"item-wrap\">\n            <a href=\"#modal-02\" title>\n              <img alt src=\"images/manual.jpg\" />\n              <div className=\"overlay\">\n                <div className=\"portfolio-item-meta\">\n                <Popup trigger={<button className=\"button\"> UWP 104T: Lego Instruction Manual</button>}\n                       modal\n                       contentStyle={contentStyle}\n                    >\n                  {close => (\n                      <div className=\"modal\">\n                          <a className=\"close\" onClick={close}>&times;</a>\n                          <div className=\"header\"> <b>Lego Instruction Manual</b> </div>\n                              <div className=\"content\">\n                                  <embed src= \"images/Lego_Manual.pdf\" width= \"500\" height= \"500\" align=\"left\"></embed>\n                                  The purpose of this assigment is to construct a manual/documentation for a product, in this case a lego toy set.\n                                  It is important to know how to write clear and concise instructions for a certain product. This manual is\n                                  designed for an 8-year old and thus should be targeted toward that audience. By making sure to understand the audience and context of the product\n                                  the struture should be clear, there should be a lot of images, and the language used in the instructions should be simple. Through this assignment I\n                                  learned that well written instructions/procedures boost the reputation of a company and can be used as persuasive\n                                  sales documents. This assignment was completed in a group with colleagues Hammad Zahid and Yordan Nikolov.\n\n                              </div>\n                              <div className=\"actions\">\n                                  <button className=\"button\" onClick={() => {\n                                          console.log(\"modal closed \");\n                                          close();\n                                  }}> Close Page </button>\n                              </div>\n                          </div> )}\n                </Popup>\n                </div>\n              </div>\n            </a>\n          </div>\n        </div> {/* item end */}\n\n        <div className=\"columns portfolio-item\">\n          <div className=\"item-wrap\">\n            <a href=\"#modal-03\" title>\n              <img alt src=\"images/usability.jpg\" />\n              <div className=\"overlay\">\n                <div className=\"portfolio-item-meta\">\n                <Popup trigger={<button className=\"button\"> UWP 104T: Usability Report for Instruction Manual</button>}\n                       modal\n                       contentStyle={contentStyle}\n                    >\n                  {close => (\n                      <div className=\"modal\">\n                          <a className=\"close\" onClick={close}>&times;</a>\n                          <div className=\"header\"> <b>Usability Report for Lego Instructional Manual</b> </div>\n                              <div className=\"content\">\n                                  <embed src= \"images/Usability_Report.pdf\" width= \"500\" height= \"500\" align=\"left\"></embed>\n                                  The purpose of this assigment is to communicate recommended design changes to a client. This assignment\n                                  goes hand in hand with the Instructional Manual assignment. After constucting the manual, my team conducted\n                                  a thinking-out-loud testing session with participants who tried to build the lego figure by using th manual.\n                                  We tracked what they said, how they interacted with the manual, and observed the errors they made. We then used\n                                  these observations to find critical problems and issues within our original manual. We tried to pin down the\n                                  causes of these problems and recommended solutions for these problems. This Usability report details this process.\n                                  The report showed how important usability testing for developing products from lego figurines to software.\n                              </div>\n                              <div className=\"actions\">\n                                  <button className=\"button\" onClick={() => {\n                                          console.log(\"modal closed \");\n                                          close();\n                                  }}> Close Page </button>\n                              </div>\n                          </div> )}\n                </Popup>\n                </div>\n              </div>\n            </a>\n          </div>\n        </div> {/* item end */}\n\n\n        <div className=\"columns portfolio-item\">\n          <div className=\"item-wrap\">\n            <a href=\"#modal-04\" title>\n              <img alt src=\"images/card_sort.jpeg\" />\n              <div className=\"overlay\">\n                <div className=\"portfolio-item-meta\">\n                <Popup trigger={<button className=\"button\"> UWP 104T: Card Sorting Report</button>}\n                       modal\n                       contentStyle={contentStyle}\n                    >\n                  {close => (\n                      <div className=\"modal\">\n                          <a className=\"close\" onClick={close}>&times;</a>\n                          <div className=\"header\"> <b>Card Sorting Report</b> </div>\n                              <div className=\"content\">\n                                  <embed src= \"images/Card_Sorting_Report.pdf\" width= \"500\" height= \"500\" align=\"left\"></embed>\n                                  This report was another assignment for my Technical Writing Class. In the course we conducted a closed\n                                  card sort for this very portfolio website you are on. I originally had a wireframe based on what I\n                                  thought this website would look like. I had three participants conduct the card sort while I wrote down\n                                  observations and asked them questions about their decisions. I took this data and wrote this report to\n                                  analyze the results and how I should create my Portfolio Website. By completing this assignment I was able\n                                  to get more experience in writing IMRD(Introduction, Method, Results, Discussion) Reports. It also showed\n                                  how important card sort tests are for designing information architectures.  \n                              </div>\n                              <div className=\"actions\">\n                                  <button className=\"button\" onClick={() => {\n                                          console.log(\"modal closed \");\n                                          close();\n                                  }}> Close Page </button>\n                              </div>\n                          </div> )}\n                </Popup>\n                </div>\n              </div>\n            </a>\n          </div>\n        </div> {/* item end */}\n\n      </div> {/* portfolio-wrapper end */}\n    </div> {/* twelve columns end */}\n            </div> {/* row End */}\n\n            </section> {/* Resume Section End*/}\n            </React.Fragment>\n\n        );\n    }\n}\n","import React, { Component } from 'react';\nexport default class Contactus extends Component {\n    render() {\n        return (\n            <React.Fragment>\n            {/* Contact Section\n   ================================================== */}\n<section id=\"contact\">\n  <div className=\"row section-head\">\n    <div className=\"two columns header-col\">\n      <h1><span>Get In Touch.</span></h1>\n    </div>\n    <div className=\"ten columns\">\n      <p className=\"lead\"> I am always ready to answer any important questions you have ready for me.\n      I reguraly check both my personal email, <b>ravishdeep10@gmail.com</b>, and my school email,\n       <b>radsingh@ucdavis.edu</b> almost hourly. I recommend emailing me at either of these adresses\n      or by using the contact form below.\n      </p>\n    </div>\n  </div>\n  <div className=\"row\">\n    <div className=\"eight columns\">\n      {/* form */}\n      <form action method=\"post\" id=\"contactForm\" name=\"contactForm\">\n        <fieldset>\n          <div>\n            <label htmlFor=\"contactName\">Name <span className=\"required\">*</span></label>\n            <input type=\"text\" defaultValue size={35} id=\"contactName\" name=\"contactName\" />\n          </div>\n          <div>\n            <label htmlFor=\"contactEmail\">Email <span className=\"required\">*</span></label>\n            <input type=\"text\" defaultValue size={35} id=\"contactEmail\" name=\"contactEmail\" />\n          </div>\n          <div>\n            <label htmlFor=\"contactSubject\">Subject</label>\n            <input type=\"text\" defaultValue size={35} id=\"contactSubject\" name=\"contactSubject\" />\n          </div>\n          <div>\n            <label htmlFor=\"contactMessage\">Message <span className=\"required\">*</span></label>\n            <textarea cols={50} rows={15} id=\"contactMessage\" name=\"contactMessage\" defaultValue={\"\"} />\n          </div>\n          <div>\n            <button className=\"submit\">Submit</button>\n            <span id=\"image-loader\">\n              <img alt src=\"images/loader.gif\" />\n            </span>\n          </div>\n        </fieldset>\n      </form> {/* Form End */}\n      {/* contact-warning */}\n      <div id=\"message-warning\"> Error boy</div>\n      {/* contact-success */}\n      <div id=\"message-success\">\n        <i className=\"fa fa-check\" />Your message was sent, thank you!<br />\n      </div>\n    </div>\n    <aside className=\"four columns footer-widgets\">\n      <div className=\"widget widget_contact\">\n        <h4>Address and Phone</h4>\n        <p className=\"address\">\n          Ravishdeep Singh<br />\n          Davis, CA 95616 US<br />\n          <span>(PHO) NUM-BERR</span>\n        </p>\n      </div>\n\n    </aside>\n  </div>\n</section> {/* Contact Section End*/}\n</React.Fragment>\n\n        );\n    }\n}\n","import React, { Component } from 'react';\nexport default class Footer extends Component {\n    render() {\n        return (\n            <React.Fragment>\n\n            {/* footer ================================================== */}\n            <footer>\n                <div className=\"row\">\n                    <div className=\"twelve columns\">\n                        <ul className=\"social-links\">\n                            <li><a href=\"https://www.facebook.com/profile.php?id=100008134933656\"><i className=\"fa fa-facebook\" /></a></li>\n                            <li><a href=\"https://www.linkedin.com/in/ravishdeep-singh-9918a3142/\"><i className=\"fa fa-linkedin\" /></a></li>\n                        </ul>\n                        <ul className=\"copyright\">\n                            <li>© Copyright 2014 CeeVee</li>\n                            <li>Design by <a title=\"Styleshout\" href=\"http://www.styleshout.com/\">Styleshout</a></li>\n                        </ul>\n                    </div>\n                    <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\" /></a></div>\n                </div>\n            </footer>\n            </React.Fragment>\n        );\n    }\n}\n","\nimport React, { Component } from 'react';\nimport Header from './components/header/header';\nimport About from './components/about/about';\nimport Resume from './components/resume/resume';\nimport ContactUs from './components/contactus/contactus';\nimport Footer from './components/footer/footer';\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <About />\n        <Resume />\n        <ContactUs />\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}